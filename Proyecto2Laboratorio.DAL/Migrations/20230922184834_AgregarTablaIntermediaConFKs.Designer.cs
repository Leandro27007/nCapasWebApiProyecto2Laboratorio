// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Proyecto2Laboratorio.DAL;

#nullable disable

namespace Proyecto2Laboratorio.DAL.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230922184834_AgregarTablaIntermediaConFKs")]
    partial class AgregarTablaIntermediaConFKs
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Proyecto2Laboratorio.Entities.Cliente", b =>
                {
                    b.Property<string>("Cedula")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Cedula");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("Proyecto2Laboratorio.Entities.EstadoRecibo", b =>
                {
                    b.Property<int>("EstadoReciboId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EstadoReciboId"));

                    b.Property<string>("DescripcionEstado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreEstado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EstadoReciboId");

                    b.ToTable("estadoRecibo");
                });

            modelBuilder.Entity("Proyecto2Laboratorio.Entities.Medico", b =>
                {
                    b.Property<string>("Cedula")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Cedula");

                    b.ToTable("Medico");
                });

            modelBuilder.Entity("Proyecto2Laboratorio.Entities.PruebaDeLaboratorio", b =>
                {
                    b.Property<int>("PruebaDeLaboratorioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PruebaDeLaboratorioId"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("PruebaDeLaboratorioId");

                    b.ToTable("pruebaDeLaboratorios");
                });

            modelBuilder.Entity("Proyecto2Laboratorio.Entities.PruebaDeLaboratorioRecibo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("PruebaDeLaboratorioId")
                        .HasColumnType("int");

                    b.Property<int>("ReciboId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PruebaDeLaboratorioId");

                    b.HasIndex("ReciboId");

                    b.ToTable("PruebaDeLaboratorioRecibo");
                });

            modelBuilder.Entity("Proyecto2Laboratorio.Entities.Recibo", b =>
                {
                    b.Property<int>("ReciboId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReciboId"));

                    b.Property<string>("CedulaCliente")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CedulaMedico")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CedulaUsuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Descuento")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("EstadoReciboId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("NCF")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ReciboId");

                    b.HasIndex("CedulaCliente");

                    b.HasIndex("CedulaMedico");

                    b.HasIndex("CedulaUsuario");

                    b.HasIndex("EstadoReciboId");

                    b.ToTable("Recibo");
                });

            modelBuilder.Entity("Proyecto2Laboratorio.Entities.Roles", b =>
                {
                    b.Property<int>("RolId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RolId"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreRol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RolId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Proyecto2Laboratorio.Entities.Usuario", b =>
                {
                    b.Property<string>("Cedula")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Cedula");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("Proyecto2Laboratorio.Entities.PruebaDeLaboratorioRecibo", b =>
                {
                    b.HasOne("Proyecto2Laboratorio.Entities.PruebaDeLaboratorio", "PruebaDeLaboratorio")
                        .WithMany("Recibos")
                        .HasForeignKey("PruebaDeLaboratorioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Proyecto2Laboratorio.Entities.Recibo", "Recibo")
                        .WithMany("PruebasDeLaboratorio")
                        .HasForeignKey("ReciboId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PruebaDeLaboratorio");

                    b.Navigation("Recibo");
                });

            modelBuilder.Entity("Proyecto2Laboratorio.Entities.Recibo", b =>
                {
                    b.HasOne("Proyecto2Laboratorio.Entities.Cliente", "Cliente")
                        .WithMany("Recibos")
                        .HasForeignKey("CedulaCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Proyecto2Laboratorio.Entities.Medico", "Medico")
                        .WithMany("Recibos")
                        .HasForeignKey("CedulaMedico")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Proyecto2Laboratorio.Entities.Usuario", "Usuario")
                        .WithMany("Recibos")
                        .HasForeignKey("CedulaUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Proyecto2Laboratorio.Entities.EstadoRecibo", "EstadoRecibo")
                        .WithMany("Recibos")
                        .HasForeignKey("EstadoReciboId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("EstadoRecibo");

                    b.Navigation("Medico");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Proyecto2Laboratorio.Entities.Cliente", b =>
                {
                    b.Navigation("Recibos");
                });

            modelBuilder.Entity("Proyecto2Laboratorio.Entities.EstadoRecibo", b =>
                {
                    b.Navigation("Recibos");
                });

            modelBuilder.Entity("Proyecto2Laboratorio.Entities.Medico", b =>
                {
                    b.Navigation("Recibos");
                });

            modelBuilder.Entity("Proyecto2Laboratorio.Entities.PruebaDeLaboratorio", b =>
                {
                    b.Navigation("Recibos");
                });

            modelBuilder.Entity("Proyecto2Laboratorio.Entities.Recibo", b =>
                {
                    b.Navigation("PruebasDeLaboratorio");
                });

            modelBuilder.Entity("Proyecto2Laboratorio.Entities.Usuario", b =>
                {
                    b.Navigation("Recibos");
                });
#pragma warning restore 612, 618
        }
    }
}
