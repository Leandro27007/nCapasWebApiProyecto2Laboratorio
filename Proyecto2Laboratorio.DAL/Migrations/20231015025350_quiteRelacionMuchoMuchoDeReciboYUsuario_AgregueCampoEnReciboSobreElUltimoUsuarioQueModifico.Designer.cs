// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Proyecto2Laboratorio.DAL;

#nullable disable

namespace Proyecto2Laboratorio.DAL.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231015025350_quiteRelacionMuchoMuchoDeReciboYUsuario_AgregueCampoEnReciboSobreElUltimoUsuarioQueModifico")]
    partial class quiteRelacionMuchoMuchoDeReciboYUsuario_AgregueCampoEnReciboSobreElUltimoUsuarioQueModifico
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Proyecto2Laboratorio.Entities.Cliente", b =>
                {
                    b.Property<int>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClienteId"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cedula")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClienteId");

                    b.ToTable("cliente");
                });

            modelBuilder.Entity("Proyecto2Laboratorio.Entities.Permiso", b =>
                {
                    b.Property<int>("PermisoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PermisoId"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombrePermiso")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PermisoId");

                    b.ToTable("permiso");
                });

            modelBuilder.Entity("Proyecto2Laboratorio.Entities.PruebaDeLaboratorio", b =>
                {
                    b.Property<int>("PruebaDeLaboratorioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PruebaDeLaboratorioId"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("PruebaDeLaboratorioId");

                    b.ToTable("pruebaDeLaboratorio");
                });

            modelBuilder.Entity("Proyecto2Laboratorio.Entities.PruebaDeLaboratorioRecibo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("PruebaDeLaboratorioId")
                        .HasColumnType("int");

                    b.Property<int>("ReciboId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PruebaDeLaboratorioId");

                    b.HasIndex("ReciboId");

                    b.ToTable("pruebaDeLaboratorioRecibo");
                });

            modelBuilder.Entity("Proyecto2Laboratorio.Entities.Recibo", b =>
                {
                    b.Property<int>("ReciboId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReciboId"));

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Descuento")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdUltimoUsuarioQueModifico")
                        .HasColumnType("int");

                    b.Property<string>("NCF")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NotaDeModificacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuariosCedula")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ReciboId");

                    b.HasIndex("ClienteId");

                    b.HasIndex("UsuariosCedula");

                    b.ToTable("recibo");
                });

            modelBuilder.Entity("Proyecto2Laboratorio.Entities.Rol", b =>
                {
                    b.Property<int>("RolId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RolId"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<string>("NombreRol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RolId");

                    b.ToTable("rol");
                });

            modelBuilder.Entity("Proyecto2Laboratorio.Entities.Turno", b =>
                {
                    b.Property<string>("TurnoId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("EstadoTurno")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TurnoId");

                    b.ToTable("turno");
                });

            modelBuilder.Entity("Proyecto2Laboratorio.Entities.TurnoPruebaDeLaboratorio", b =>
                {
                    b.Property<int>("TurnoPruebaDeLaboratorioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TurnoPruebaDeLaboratorioId"));

                    b.Property<int>("PruebaDeLaboratorioId")
                        .HasColumnType("int");

                    b.Property<string>("TurnoId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("TurnoPruebaDeLaboratorioId");

                    b.HasIndex("PruebaDeLaboratorioId");

                    b.HasIndex("TurnoId");

                    b.ToTable("turnoPruebaDeLaboratorio");
                });

            modelBuilder.Entity("Proyecto2Laboratorio.Entities.Usuario", b =>
                {
                    b.Property<string>("Cedula")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Cedula");

                    b.ToTable("usuario");
                });

            modelBuilder.Entity("Proyecto2Laboratorio.Entities.PruebaDeLaboratorioRecibo", b =>
                {
                    b.HasOne("Proyecto2Laboratorio.Entities.PruebaDeLaboratorio", "PruebaDeLaboratorio")
                        .WithMany("Recibos")
                        .HasForeignKey("PruebaDeLaboratorioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Proyecto2Laboratorio.Entities.Recibo", "Recibo")
                        .WithMany("PruebasDeLaboratorio")
                        .HasForeignKey("ReciboId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PruebaDeLaboratorio");

                    b.Navigation("Recibo");
                });

            modelBuilder.Entity("Proyecto2Laboratorio.Entities.Recibo", b =>
                {
                    b.HasOne("Proyecto2Laboratorio.Entities.Cliente", "Cliente")
                        .WithMany("Recibos")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Proyecto2Laboratorio.Entities.Usuario", "Usuarios")
                        .WithMany("Recibos")
                        .HasForeignKey("UsuariosCedula")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("Proyecto2Laboratorio.Entities.TurnoPruebaDeLaboratorio", b =>
                {
                    b.HasOne("Proyecto2Laboratorio.Entities.PruebaDeLaboratorio", "PruebaDeLaboratorio")
                        .WithMany("turnoPruebaDeLaboratorios")
                        .HasForeignKey("PruebaDeLaboratorioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Proyecto2Laboratorio.Entities.Turno", "Turno")
                        .WithMany("turnoPruebaDeLaboratorios")
                        .HasForeignKey("TurnoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PruebaDeLaboratorio");

                    b.Navigation("Turno");
                });

            modelBuilder.Entity("Proyecto2Laboratorio.Entities.Cliente", b =>
                {
                    b.Navigation("Recibos");
                });

            modelBuilder.Entity("Proyecto2Laboratorio.Entities.PruebaDeLaboratorio", b =>
                {
                    b.Navigation("Recibos");

                    b.Navigation("turnoPruebaDeLaboratorios");
                });

            modelBuilder.Entity("Proyecto2Laboratorio.Entities.Recibo", b =>
                {
                    b.Navigation("PruebasDeLaboratorio");
                });

            modelBuilder.Entity("Proyecto2Laboratorio.Entities.Turno", b =>
                {
                    b.Navigation("turnoPruebaDeLaboratorios");
                });

            modelBuilder.Entity("Proyecto2Laboratorio.Entities.Usuario", b =>
                {
                    b.Navigation("Recibos");
                });
#pragma warning restore 612, 618
        }
    }
}
